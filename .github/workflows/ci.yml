name: CI
on: [push, pull_request]

concurrency: # Cancel stale PR builds (but not push builds)
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        target:
          - os: linux
            name: linux_x64
          - os: macosx
            name: macosx_x64
          - os: windows
            name: windows_x64
        include:
          - target:
              os: linux
            builder: ubuntu-22.04
          - target:
              os: macosx
            builder: macos-13
          - target:
              os: windows
            builder: windows-latest
    defaults:
      run:
        shell: bash

    name: CI '${{ matrix.target.name }}'
    runs-on: ${{ matrix.builder }}
    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
          git config --global progress false
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          # Install OpenSSL 1.1.x (for nimble)
          choco install openssl --version=1.1.1.2100 -y --no-progress

          $openSslPath = "C:\Program Files\OpenSSL-Win64\bin"
          if (-Not (Test-Path $openSslPath)) {
            $openSslPath = "C:\Program Files\OpenSSL\bin"
          }

          echo "$openSslPath" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

          # Install Nim (includes pcre64.dll and nimble)
          choco install nim -y --no-progress
          $nimBin = (Get-ChildItem "C:\tools\Nim" -Directory -Filter "nim-*" | Select-Object -First 1 | ForEach-Object { Join-Path $_.FullName "bin" })
          echo "$nimBin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install PCRE (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y libpcre3

      - name: Install PCRE (macOS)
        if: runner.os == 'macOS'
        run: brew install pcre

      - uses: nim-lang/setup-nimble-action@v1
        if: runner.os != 'Windows'
        with:
          nimble-version: '0.20.1'
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build nph
        run: |
           nimble build

      - name: Check formatting
        run: |
          ! ./nph --check tests/before
          ./nph --check tests/after

          ./nph src
          git diff --exit-code
